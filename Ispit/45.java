//–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏—Ç–µ –∑–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏j–∞—Ç–∞ –Ω–∞ –¥–∞—Ç–æ—Ç–µ—á–Ω–∏–æ—Ç —Å–∏—Å—Ç–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–æ—Ç –Ω–∞ –§–ò–ù–ö–ò
//—Å–µ –∑–∞—á—É–≤–∞–Ω–∏ –≤–æ —Ö–µ—à —Ç–∞–±–µ–ª–∞. –ó–∞ —Å–µ–∫–æj–∞ –¥–∞—Ç–æ—Ç–µ–∫–∞ —Å–µ –∑–Ω–∞–µ –Ω–µj–∑–∏–Ω–∞—Ç–∞ —Å–æ–¥—Ä–∂–∏–Ω–∞ –∏
//–ø–∞—Ç–µ–∫–∞—Ç–∞ –Ω–∞ –∫–æj–∞ —Å–µ –Ω–∞–æ¬¥–≥–∞. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ –µ –¥–∞ –≥–∏ –Ω–∞j–¥–µ—Ç–µ —Å–∏—Ç–µ –¥–∞—Ç–æ—Ç–µ–∫–∏ –∫–æ–∏ –∏–º–∞–∞—Ç
//–∏–¥–µ–Ω—Ç–∏—á–Ω–∞ —Å–æ–¥—Ä–∂–∏–Ω–∞.
//–í–ª–µ–∑: –í–æ –ø—Ä–≤–∏–æ—Ç —Ä–µ–¥ –µ –¥–∞–¥–µ–Ω –±—Ä–æj–æ—Ç –Ω–∞ –¥–∞—Ç–æ—Ç–µ–∫–∏ ùëÅ . –í–æ —Å–ª–µ–¥–Ω–∏—Ç–µ ùëÅ —Ä–µ–¥–∏—Ü–∏ —Å–µ
//–¥–∞–¥–µ–Ω–∏ –ø–æ–¥–∞—Ç–æ—Ü–∏ –∑–∞ —Å–µ–∫–æj–∞ –¥–∞—Ç–æ—Ç–µ–∫–∞ –≤–æ —Ñ–æ—Ä–º–∞—Ç ‚Äûpath file (content)‚Äù, –∫–∞–¥–µ —à—Ç–æ path
//–µ –ø–∞—Ç–µ–∫–∞—Ç–∞ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—É–º–æ—Ç –≤–æ –∫–æj —Å–µ –Ω–∞–æ¬¥–≥–∞ –¥–∞—Ç–æ—Ç–µ–∫–∞—Ç–∞, file –µ –Ω–∞–∑–∏–≤–æ—Ç –Ω–∞ –¥–∞—Ç–æ-
//—Ç–µ–∫–∞—Ç–∞ –∑–∞–µ–¥–Ω–æ —Å–æ –Ω–∞—Å—Ç–∞–≤–∫–∞—Ç–∞ –∏ content –µ —Å–æ–¥—Ä–∂–∏–Ω–∞—Ç–∞ –Ω–∞ –¥–∞—Ç–æ—Ç–µ–∫–∞—Ç–∞. –í–æ —Å–ª–µ–¥–Ω–∏–æ—Ç
//—Ä–µ–¥ –µ –¥–∞–¥–µ–Ω –±—Ä–æj –Ω–∞ –∫–æ–º–∞–Ω–¥–∏ ùëÄ . –í–æ —Å–ª–µ–¥–Ω–∏—Ç–µ ùëÄ —Ä–µ–¥–∏—Ü–∏ —Å–µ –¥–∞–¥–µ–Ω–∏ –∫–æ–º–∞–Ω–¥–∏ –≤–æ
//—Ñ–æ—Ä–º–∞—Ç ‚Äûcmd path file (content)‚Äù –∫–∞–¥–µ —à—Ç–æ cmd –º–æ–∂–µ –¥–∞ –±–∏–¥–µ add, delete –∏–ª–∏ find.
//–ö–æ–º–∞–Ω–¥–∞—Ç–∞ add —Ç—Ä–µ–±–∞ –¥–∞ j–∞ –¥–æ–¥–∞–¥–µ –¥–∞—Ç–æ—Ç–µ–∫–∞—Ç–∞ file —Å–æ —Å–æ–¥—Ä–∂–∏–Ω–∞ content –≤–æ –¥–∏—Ä–µ–∫-
//—Ç–æ—Ä–∏—É–º–æ—Ç –∫–æj —Å–µ –Ω–∞–æ¬¥–≥–∞ –Ω–∞ –ø–∞—Ç–µ–∫–∞—Ç–∞ path. –ö–æ–º–∞–Ω–¥–∞—Ç–∞ delete —Ç—Ä–µ–±–∞ –¥–∞ j–∞ –∏–∑–±—Ä–∏—à–µ
//–¥–∞—Ç–æ—Ç–µ–∫–∞—Ç–∞ file —Å–æ —Å–æ–¥—Ä–∂–∏–Ω–∞ content –æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—É–º–æ—Ç –∫–æj —Å–µ –Ω–∞–æ¬¥–≥–∞ –Ω–∞ –ø–∞—Ç–µ–∫–∞—Ç–∞
//path. –ö–æ–º–∞–Ω–¥–∞—Ç–∞ find —Ç—Ä–µ–±–∞ –¥–∞ –ø—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –ø–æ—Å—Ç–æ–∏ –¥–∞—Ç–æ—Ç–µ–∫–∞—Ç–∞ file —Å–æ —Å–æ–¥—Ä–∂–∏–Ω–∞
//content –≤–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—É–º–æ—Ç —Å–æ –ø–∞—Ç–µ–∫–∞ path –∏ –¥–∞ –∏—Å–ø–µ—á–∞—Ç–∏ –Ω–∞ –µ–∫—Ä–∞–Ω ‚Äûtrue‚Äù –∏–ª–∏ ‚Äûfalse‚Äù.
//–í–æ –ø–æ—Å–ª–µ–¥–Ω–∞—Ç–∞ —Ä–µ–¥–∏—Ü–∞ –æ–¥ –≤–ª–µ–∑–æ—Ç –µ –¥–∞–¥–µ–Ω–∞ —Å–æ–¥—Ä–∂–∏–Ω–∞—Ç–∞ content.
//–ò–∑–ª–µ–∑: –õ–∏—Å—Ç–∞ –æ–¥ —Å–∏—Ç–µ –ø–∞—Ç–µ–∫–∏ –Ω–∞ —Å–∏—Ç–µ –¥–∞—Ç–æ—Ç–µ–∫–∏—Ç–µ —Å–æ —Å–æ–¥—Ä–∂–∏–Ω–∞ content.

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        HashMap<String,ArrayList<String>> map = new HashMap<>();

        int n = scanner.nextInt();
        for(int i=0; i<n; i++){
            String path = scanner.next();
            String file = scanner.next() + " " + scanner.next();
            map.putIfAbsent(path,new ArrayList<>());
            map.get(path).add(file);
        }

        int m = scanner.nextInt();
        for(int i=0; i<m; i++){
            String input = scanner.next();
            if(input.equals("add")){
                String path = scanner.next();
                String file = scanner.next() + " " + scanner.next();
                map.putIfAbsent(path,new ArrayList<>());
                map.get(path).add(file);
            } else if(input.equals("delete")){
                String path = scanner.next();
                String file = scanner.next() + " " + scanner.next();

                map.get(path).remove(file);

            } else if(input.equals("find")){
                String path = scanner.next();
                String file = scanner.next() + " " + scanner.next();

                if(map.get(path).contains(file)){
                    System.out.println("true");
                } else {
                    System.out.println("false");
                }
            }
        }

        String text = scanner.next();

        map.forEach((key,value) -> value.forEach(entry -> {
            if(entry.contains(text)){
                String []temp = entry.split(" ");
                String file = temp[0];
                System.out.println(key+" "+file);
            }
        }));
    }

}
